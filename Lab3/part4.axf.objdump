
W:/labs/lab3/part4.axf:     file format elf32-littlearm


Disassembly of section .text:

00000000 <__cs3_interrupt_vector>:
/* Program that converts a binary number to decimal */
           .text               // executable code follows
           .global _start
_start:
            MOV    R4, #N
   0:	e3a04074 	mov	r4, #116	; 0x74
            MOV    R5, #Digits  // R5 points to the decimal digits storage location
   4:	e3a05078 	mov	r5, #120	; 0x78
            LDR    R4, [R4]     // R4 holds N
   8:	e5944000 	ldr	r4, [r4]
            MOV    R0, R4       // parameter for DIVIDE goes in R0
   c:	e1a00004 	mov	r0, r4
            BL     DIV_1000
  10:	eb000004 	bl	28 <DIV_1000>
            STRB   R2, [R5, #3] // Thousands digit is now in R2
  14:	e5c52003 	strb	r2, [r5, #3]
            STRB   R3, [R5, #2] // Hundreds digit is now in R3
  18:	e5c53002 	strb	r3, [r5, #2]
            STRB   R6, [R5, #1] // Tens digit is now in R6
  1c:	e5c56001 	strb	r6, [r5, #1]
            STRB   R0, [R5]     // Ones digit is in R0
  20:	e5c50000 	strb	r0, [r5]

00000024 <END>:
END:        B      END
  24:	eafffffe 	b	24 <END>

00000028 <DIV_1000>:

// ******************************************************************************** //

DIV_1000:     MOV    R2, #0
  28:	e3a02000 	mov	r2, #0

0000002c <CONT_1000>:
CONT_1000:    CMP    R0, #1000
  2c:	e3500ffa 	cmp	r0, #1000	; 0x3e8
              BLT    DIV_100
  30:	ba000002 	blt	40 <DIV_100>
              SUB    R0, #1000
  34:	e2400ffa 	sub	r0, r0, #1000	; 0x3e8
              ADD    R2, #1
  38:	e2822001 	add	r2, r2, #1
              B      CONT_1000
  3c:	eafffffa 	b	2c <CONT_1000>

00000040 <DIV_100>:

DIV_100:      MOV    R3, #0
  40:	e3a03000 	mov	r3, #0

00000044 <COUNT_100>:
COUNT_100:    CMP    R0, #100
  44:	e3500064 	cmp	r0, #100	; 0x64
	      BLT    DIV_10
  48:	ba000002 	blt	58 <DIV_10>
	      SUB    R0, #100
  4c:	e2400064 	sub	r0, r0, #100	; 0x64
	      ADD    R3, #1
  50:	e2833001 	add	r3, r3, #1
	      B      COUNT_100
  54:	eafffffa 	b	44 <COUNT_100>

00000058 <DIV_10>:

DIV_10:       MOV    R6, #0
  58:	e3a06000 	mov	r6, #0

0000005c <COUNT_10>:
COUNT_10:     CMP    R0, #10
  5c:	e350000a 	cmp	r0, #10
	      BLT    DIV_END
  60:	ba000002 	blt	70 <DIV_END>
	      SUB    R0, #10
  64:	e240000a 	sub	r0, r0, #10
	      ADD    R6, #1
  68:	e2866001 	add	r6, r6, #1
	      B      COUNT_10
  6c:	eafffffa 	b	5c <COUNT_10>

00000070 <DIV_END>:

DIV_END:      MOV    PC, LR     //go back to main
  70:	e1a0f00e 	mov	pc, lr

00000074 <N>:
  74:	00000016 	.word	0x00000016

00000078 <Digits>:
  78:	00000000 	.word	0x00000000
